plugins {
    id 'java'
    id 'idea'
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    cucumberVersion = '2.3.0'
    cucumberReportVersion = '3.15.0'
    junitVersion = '4.12'
    restAssuredVersion = '3.0.7'
    lombokVersion = '1.16.18'
    slf4jVersion = '1.7.25'
}

dependencies {
    compile "io.cucumber:cucumber-java:$cucumberVersion"
    testCompile "io.cucumber:cucumber-junit:$cucumberVersion"
    compile "net.masterthought:cucumber-reporting:$cucumberReportVersion"

    testCompile "io.rest-assured:rest-assured:$restAssuredVersion"
    compile "io.rest-assured:json-path:$restAssuredVersion"
    testCompile "io.rest-assured:json-schema-validator:$restAssuredVersion"

    testCompile "junit:junit:$junitVersion"

    compile "org.projectlombok:lombok:$lombokVersion"

    compile 'com.google.guava:guava:22.0'
}

task cucumber(type: Test) {
    description 'Runs all cucumber tests through Cucumber JUnit'

    group 'verification'

    dependsOn 'cleanTest'

    outputs.upToDateWhen { false }

    testLogging.showStandardStreams = true

    reports {
        html.enabled = false
    }

    systemProperty 'org.slf4j.simpleLogger.showDateTime', 'true'
    systemProperty 'org.slf4j.simpleLogger.dateTimeFormat', 'yyyy-MM-dd\'T\'HH:mm:ss'

    systemProperty 'cucumber.options', System.properties.getProperty('cucumber.options')

    finalizedBy 'generateCucumberReport'
}

task generateCucumberReport(type: JavaExec) {
    description 'Executes Java code to create customized cucumber reports'

    classpath = sourceSets.main.runtimeClasspath
    main = 'example.utility.CucumberReport'
}
